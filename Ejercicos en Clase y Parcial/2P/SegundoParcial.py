# -*- coding: utf-8 -*-
"""SegundoParcialFP ( FUNCIONES ) .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T8Zvu5j_dOmbv7k1-PTq1kzqJQEokZ9f
"""

import random
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

def mostrar_menu():
    while True:
        print("1.  -- PARTIDOS JUGADOS COMO LOCAL Y VISITANTES DE CADA EQUIPO --")
        print("2.  -- RESULTADOS TOTALES DE CADA UNO DE LOS EQUIPOS --")
        print("3.  -- CANTIDAD TOTAL DE GOLES LOCALES Y VISITANTES --")
        print("4.  -- EQUIPO QUE HIZO MAS Y MENOS GOLES --")
        print("5.  -- GRAFICA DE EQUIPOS DE LA LIGA --")
        print("6.  -- TABLA DE POSICIONES DE LA LIGA --")
        print("7. Salir")
        
        opcion = input("Seleccione una opcion: ")
        
        if opcion == "1":
            print("Ha seleccionado la opcion 1. (-- PARTIDOS JUGADOS COMO LOCAL Y VISITANTES DE CADA EQUIPO --)")
            equipos = ["Atlético Nacional", "Deportivo Cali", "Junior",  "Millonarios", "Once Caldas", "Deportes Tolima", "Aguilas doradas", "Alianza petrolera"]
            goles_local = list(range(0,5))
            goles_visit = list(range(0,3))
            # Crear lista de resultados como local y visitante
            resultados_local = []
            resultados_visitante = []
            # Generar resultados para cada equipo
            for i in range(len(equipos)):
                gol_local = random.choice(goles_local)
                gol_visitante = random.choice(goles_visit)
                resultados_local.append(gol_local)
                resultados_visitante.append(gol_visitante)
                print(f"{equipos[i]} jugó como local y marcó {gol_local} goles.")
                print(f"{equipos[i]} jugó como visitante y marcó {gol_visitante} goles.")
                # Calcular resultados de cada equipo
                partidos_jugados = len(equipos) * 2
                partidos_ganados = [0] * len(equipos)
                partidos_perdidos = [0] * len(equipos)
                partidos_empatados = [0] * len(equipos)
            
        if opcion == "2":
            print("Ha seleccionado la opcion 2: (-- RESULTADOS TOTALES DE CADA UNO DE LOS EQUIPOS --)")
            for i in range(len(equipos)):
                for j in range(len(equipos)):
                    if i != j:
                    # Si el equipo ganó como local
                        if resultados_local[i] > resultados_visitante[j]:
                            partidos_ganados[i] += 1
                    # Si el equipo perdió como local
                        elif resultados_local[i] < resultados_visitante[j]:
                            partidos_perdidos[i] += 1
                    # Si hubo empate como local
                        else:
                            partidos_empatados[i] += 1
                        
                    # Si el equipo ganó como visitante
                        if resultados_visitante[i] > resultados_local[j]:
                            partidos_ganados[i] += 1
                    # Si el equipo perdió como visitante
                        elif resultados_visitante[i] < resultados_local[j]:
                            partidos_perdidos[i] += 1
                    # Si hubo empate como visitante
                        else:
                            partidos_empatados[i] += 1
                print(f"El equipo {equipos[i]} jugó {partidos_jugados} partidos, con {partidos_ganados[i]} partidos ganados, {partidos_perdidos[i]} partidos perdidos y {partidos_empatados[i]} partidos empatados.")
                    
        elif opcion == "3":
            print("Ha seleccionado la opcion 3: (--- CANTIDAD TOTAL DE GOLES LOCALES Y VISITANTES ---)")
            # Calcular la cantidad de goles de los equipos locales y visitantes
            total_goles_locales = sum(resultados_local)
            total_goles_visitantes = sum(resultados_visitante)
            print(f"Total de goles locales: {total_goles_locales}")
            print(f"Total de goles visitantes: {total_goles_visitantes}")

        elif opcion == "4":
            print("Has seleccionado la opcion 4: (--- EQUIPO QUE HIZO MAS Y MENOS GOLES ---)")
            # Calcular la cantidad de goles de cada equipo
            goles_por_equipo = [sum(resultados_local[i] for i in range(len(equipos)) if equipos[i] == equipo) + sum(resultados_visitante[i] for i in range(len(equipos)) if equipos[i] == equipo) for equipo in equipos]
            # Obtener el índice del equipo con más goles
            indice_equipo_mas_goles = goles_por_equipo.index(max(goles_por_equipo))
            # Obtener el equipo con más goles
            equipo_mas_goles = equipos[indice_equipo_mas_goles]
            print(f"El equipo con más goles en la competencia es {equipo_mas_goles}, con {max(goles_por_equipo)} goles.")
            # Obtener el índice del equipo con menos goles
            indice_equipo_menos_goles = goles_por_equipo.index(min(goles_por_equipo))
            # Obtener el equipo con menos goles
            equipo_menos_goles = equipos[indice_equipo_menos_goles]
            print(f"El equipo con menos goles en la competencia es {equipo_menos_goles}, con {min(goles_por_equipo)} goles.")

        elif opcion == "5":
            print("Has seleccionado la opcion 5: (--- GRAFICA DE EQUIPOS DE LA LIGA ---)")
            fig, ax = plt.subplots()
            fruits = ['Goles Locales', 'Goles Visitantes']
            counts = [total_goles_locales, total_goles_visitantes]
            bar_labels = ['Goles Locales', 'Goles Visitantes']
            bar_colors = ['tab:red', 'tab:blue']
            ax.bar(fruits, counts, label=bar_labels, color=bar_colors)
            ax.set_ylabel('')
            ax.set_title('GOLES TOTALES')
            ax.legend(title='')
            plt.show()

        elif opcion == "6":
            print("Has seleccionado la opcion 6: (--- TABLA DE POSICIONES DE LA LIGA ---)")
            datos_equipos = {"Equipo": equipos,
            "PJ": [partidos_jugados] * len(equipos),
            "PG": partidos_ganados,
            "PP": partidos_perdidos,
            "PE": partidos_empatados,
            "GF": goles_por_equipo,
            "Puntos": [partidos_ganados[i] * 3 + partidos_empatados[i] for i in range(len(equipos))]}
            #Crear un dataframe a partir del diccionario de datos
            tabla_posiciones = pd.DataFrame(datos_equipos)
            # Ordenar la tabla de posiciones por puntos, diferencia de goles y goles a favor
            tabla_posiciones = tabla_posiciones.sort_values(by=["Puntos", "GF"], ascending=False)
            # Mostrar la tabla de posicion
            print(tabla_posiciones)

        elif opcion == "7":
            print("Saliendo del programa...")
            break
        else:
            print("Opcin invlida. Por favor, seleccione una opcin vlida.")

# Ejemplo de uso de la funcin
mostrar_menu()

print("Hello\nWorld!")